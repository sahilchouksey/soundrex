{"version":3,"file":"react-intersection-observer-hook.cjs.production.min.js","sources":["../src/utils.ts","../src/useIntersectionObserver.ts","../src/useTrackVisibility.ts"],"sourcesContent":["type EntryCallback = (entry: IntersectionObserverEntry) => void;\n\ntype CachedObserver = {\n  observer: IntersectionObserver;\n  entryCallbacks: Map<Element, EntryCallback>;\n};\n\ntype ObserverCache = Map<string, CachedObserver>;\n\ntype ObserverCachesByRoot = Map<\n  IntersectionObserverInit['root'],\n  ObserverCache\n>;\n\nexport type CachedIntersectionObserver = {\n  observe: (\n    node: Element,\n    callback: (entry: IntersectionObserverEntry) => void,\n  ) => void;\n  unobserve: (node: Element) => void;\n};\n\nexport function createObserverCache() {\n  const cachesByRoot: ObserverCachesByRoot = new Map();\n\n  function getObserver({\n    root,\n    rootMargin,\n    threshold,\n  }: IntersectionObserverInit): CachedIntersectionObserver {\n    let cacheByRoot = cachesByRoot.get(root);\n\n    if (!cacheByRoot) {\n      cacheByRoot = new Map();\n      cachesByRoot.set(root, cacheByRoot);\n    }\n\n    const cacheKey = JSON.stringify({ rootMargin, threshold });\n    let cachedObserver = cacheByRoot.get(cacheKey);\n\n    if (!cachedObserver) {\n      const entryCallbacks = new Map<Element, EntryCallback>();\n\n      const observer = new IntersectionObserver(\n        (entries) => {\n          entries.forEach((entry) => {\n            const callback = entryCallbacks.get(entry.target);\n            callback?.(entry);\n          });\n        },\n        { root, rootMargin, threshold },\n      );\n\n      cachedObserver = { observer, entryCallbacks };\n\n      cacheByRoot.set(cacheKey, cachedObserver);\n    }\n\n    return {\n      observe: (\n        node: Element,\n        callback: (entry: IntersectionObserverEntry) => void,\n      ) => {\n        cachedObserver?.entryCallbacks.set(node, callback);\n        cachedObserver?.observer.observe(node);\n      },\n      unobserve: (node: Element) => {\n        cachedObserver?.entryCallbacks.delete(node);\n        cachedObserver?.observer.unobserve(node);\n      },\n    };\n  }\n\n  return { getObserver };\n}\n","import { useState, useCallback, useRef } from 'react';\nimport { CachedIntersectionObserver, createObserverCache } from './utils';\nimport { Omit } from './types';\n\nconst DEFAULT_ROOT_MARGIN = '0px';\nconst DEFAULT_THRESHOLD = [0];\n\nexport type IntersectionObserverHookArgs = Omit<\n  IntersectionObserverInit,\n  'root'\n>;\n\nexport type IntersectionObserverHookRefCallbackNode = Element | null;\n\nexport type IntersectionObserverHookRefCallback = (\n  node: IntersectionObserverHookRefCallbackNode,\n) => void;\n\nexport type IntersectionObserverHookRootRefCallbackNode = IntersectionObserverInit['root'];\n\nexport type IntersectionObserverHookRootRefCallback = (\n  node: IntersectionObserverHookRootRefCallbackNode,\n) => void;\n\nexport type IntersectionObserverHookResult = [\n  IntersectionObserverHookRefCallback,\n  {\n    entry: IntersectionObserverEntry | undefined;\n    rootRef: IntersectionObserverHookRootRefCallback;\n  },\n];\n\nconst observerCache = createObserverCache();\n\n// For more info:\n// https://developers.google.com/web/updates/2016/04/intersectionobserver\n// https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\nfunction useIntersectionObserver(\n  args?: IntersectionObserverHookArgs,\n): IntersectionObserverHookResult {\n  const rootMargin = args?.rootMargin ?? DEFAULT_ROOT_MARGIN;\n  const threshold = args?.threshold ?? DEFAULT_THRESHOLD;\n\n  const nodeRef = useRef<IntersectionObserverHookRefCallbackNode>(null);\n  const rootRef = useRef<IntersectionObserverHookRootRefCallbackNode>(null);\n  const observerRef = useRef<CachedIntersectionObserver | null>(null);\n\n  const [entry, setEntry] = useState<IntersectionObserverEntry>();\n\n  const observe = useCallback(() => {\n    const node = nodeRef.current;\n\n    if (!node) {\n      setEntry(undefined);\n      return;\n    }\n\n    const observer = observerCache.getObserver({\n      root: rootRef.current,\n      rootMargin,\n      threshold,\n    });\n\n    observer.observe(node, (observedEntry) => {\n      setEntry(observedEntry);\n    });\n\n    observerRef.current = observer;\n  }, [rootMargin, threshold]);\n\n  const unobserve = useCallback(() => {\n    const currentObserver = observerRef.current;\n    const node = nodeRef.current;\n\n    if (node) {\n      currentObserver?.unobserve(node);\n    }\n\n    observerRef.current = null;\n  }, []);\n\n  // React will call the ref callback with the DOM element when the component mounts,\n  // and call it with null when it unmounts.\n  // So, we don't need an useEffect etc to unobserve nodes.\n  // When nodeRef.current is null, it will be unobserved and observe function\n  // won't do anything.\n  const refCallback = useCallback<IntersectionObserverHookRefCallback>(\n    (node) => {\n      unobserve();\n      nodeRef.current = node;\n      observe();\n    },\n    [observe, unobserve],\n  );\n\n  const rootRefCallback = useCallback<IntersectionObserverHookRootRefCallback>(\n    (rootNode) => {\n      unobserve();\n      rootRef.current = rootNode;\n      observe();\n    },\n    [observe, unobserve],\n  );\n\n  return [refCallback, { entry, rootRef: rootRefCallback }];\n}\n\nexport default useIntersectionObserver;\n","import { useState } from 'react';\nimport useIntersectionObserver, {\n  IntersectionObserverHookArgs,\n  IntersectionObserverHookResult,\n} from './useIntersectionObserver';\n\nexport type TrackVisibilityHookArgs = IntersectionObserverHookArgs;\n\nexport type TrackVisibilityHookResult = [\n  IntersectionObserverHookResult[0],\n  IntersectionObserverHookResult[1] & {\n    isVisible: boolean;\n    wasEverVisible: boolean;\n  },\n];\n\nfunction useTrackVisibility(\n  args?: IntersectionObserverHookArgs,\n): TrackVisibilityHookResult {\n  const [ref, result] = useIntersectionObserver(args);\n  const isVisible = Boolean(result.entry?.isIntersecting);\n  const [wasEverVisible, setWasEverVisible] = useState(isVisible);\n\n  if (isVisible && !wasEverVisible) {\n    setWasEverVisible(true);\n  }\n\n  return [ref, { ...result, isVisible, wasEverVisible }];\n}\n\nexport default useTrackVisibility;\n"],"names":["createObserverCache","cachesByRoot","Map","getObserver","root","rootMargin","threshold","cacheByRoot","get","set","cacheKey","JSON","stringify","cachedObserver","entryCallbacks","observer","IntersectionObserver","entries","forEach","entry","callback","target","observe","node","unobserve","DEFAULT_THRESHOLD","observerCache","useIntersectionObserver","args","nodeRef","useRef","rootRef","observerRef","useState","setEntry","useCallback","current","observedEntry","undefined","currentObserver","rootNode","ref","result","isVisible","Boolean","_result$entry","isIntersecting","wasEverVisible","setWasEverVisible"],"mappings":"oGAsBgBA,QACRC,EAAqC,IAAIC,UAkDxC,CAAEC,4BA/CPC,IAAAA,KACAC,IAAAA,WACAC,IAAAA,UAEIC,EAAcN,EAAaO,IAAIJ,GAE9BG,IACHA,EAAc,IAAIL,IAClBD,EAAaQ,IAAIL,EAAMG,QAGnBG,EAAWC,KAAKC,UAAU,CAAEP,WAAAA,EAAYC,UAAAA,IAC1CO,EAAiBN,EAAYC,IAAIE,OAEhCG,EAAgB,KACbC,EAAiB,IAAIZ,IAErBa,EAAW,IAAIC,sBACnB,SAACC,GACCA,EAAQC,SAAQ,SAACC,OACTC,EAAWN,EAAeN,IAAIW,EAAME,cAC1CD,GAAAA,EAAWD,QAGf,CAAEf,KAAAA,EAAMC,WAAAA,EAAYC,UAAAA,IAKtBC,EAAYE,IAAIC,EAFhBG,EAAiB,CAAEE,SAAAA,EAAUD,eAAAA,UAKxB,CACLQ,QAAS,SACPC,EACAH,oBAEAP,MAAgBC,eAAeL,IAAIc,EAAMH,YACzCP,MAAgBE,SAASO,QAAQC,IAEnCC,UAAW,SAACD,oBACVV,MAAgBC,sBAAsBS,YACtCV,MAAgBE,SAASS,UAAUD,OChE3C,IACME,EAAoB,CAAC,GA2BrBC,EAAgB1B,IAKtB,SAAS2B,EACPC,WAEMvB,iBAAauB,SAAAA,EAAMvB,cApCC,MAqCpBC,iBAAYsB,SAAAA,EAAMtB,aAAamB,EAE/BI,EAAUC,SAAgD,MAC1DC,EAAUD,SAAoD,MAC9DE,EAAcF,SAA0C,QAEpCG,aAAnBd,OAAOe,OAERZ,EAAUa,eAAY,eACpBZ,EAAOM,EAAQO,WAEhBb,OAKCR,EAAWW,EAAcvB,YAAY,CACzCC,KAAM2B,EAAQK,QACd/B,WAAAA,EACAC,UAAAA,IAGFS,EAASO,QAAQC,GAAM,SAACc,GACtBH,EAASG,MAGXL,EAAYI,QAAUrB,OAdpBmB,OAASI,KAeV,CAACjC,EAAYC,IAEVkB,EAAYW,eAAY,eACtBI,EAAkBP,EAAYI,QAC9Bb,EAAOM,EAAQO,QAEjBb,UACFgB,GAAAA,EAAiBf,UAAUD,IAG7BS,EAAYI,QAAU,OACrB,UAyBI,CAlBaD,eAClB,SAACZ,GACCC,IACAK,EAAQO,QAAUb,EAClBD,MAEF,CAACA,EAASE,IAYS,CAAEL,MAAAA,EAAOY,QATNI,eACtB,SAACK,GACChB,IACAO,EAAQK,QAAUI,EAClBlB,MAEF,CAACA,EAASE,kRCrFd,SACEI,WAEsBD,EAAwBC,GAAvCa,OAAKC,OACNC,EAAYC,iBAAQF,EAAOvB,cAAP0B,EAAcC,kBACIb,WAASU,GAA9CI,cAEHJ,IAAcI,IAChBC,SAAkB,GAGb,CAACP,OAAUC,GAAQC,UAAAA,EAAWI,eAAAA"}